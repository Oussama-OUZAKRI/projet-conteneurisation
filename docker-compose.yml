version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true" 
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8082:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  database:
    image: mysql:latest
    depends_on:
      - traefik
    environment:
      - MYSQL_ROOT_PASSWORD=toor
      - MYSQL_DATABASE=t_students
    volumes:
      - db_data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - app-network

  backend:
    image: backend-app:latest
    depends_on:
      - traefik
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://database:3306/t_students
    labels:
      - "traefik.http.routers.backend.rule=Host(`backend.local`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - app-network

  frontend:
    image: frontend-app:latest
    depends_on:
      - traefik
    labels:
      - "traefik.http.routers.frontend.rule=Host(`frontend.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - app-network

networks:
  app-network:
    driver: overlay

volumes:
  db_data: